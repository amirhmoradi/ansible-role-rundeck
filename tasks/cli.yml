---
- name: Create CLI user
  user:
    name: "{{ rundeck_cli_user }}"
    state: present
  register: _rundeck_cli_user

- name: Create ~/.rd directory for CLI user
  file:
    path: "{{ _rundeck_cli_user.home }}/.rd/"
    state: directory
    owner: "{{ rundeck_cli_user }}"
    group: "{{ rundeck_cli_user }}"
    mode: u=rwx,g=,o=

- name: Check for CLI API token
  stat:
    path: "{{ _rundeck_cli_user.home }}/.rd/token"
  register: _token_file

- name: Generate CLI user token
  when:
    - rundeck_cli_auto_token
    - not _token_file.stat.exists
  block:
    - name: Generate CLI user API token
      set_fact:
        _cli_token: "{{ ansible_date_time.iso8601_micro | to_uuid | hash('sha1') }}"

    - name: Write CLI user API token
      copy:
        dest: "{{ _rundeck_cli_user.home }}/.rd/token"
        content: "{{ _cli_token }}"
        owner: "{{ rundeck_cli_user }}"
        group: "{{ rundeck_cli_user }}"
        mode: u=rw,g=,o=

- name: Use existing CLI user token
  when:
    - rundeck_cli_auto_token
    - _token_file.stat.exists
  block:
    - name: Read CLI user API token
      slurp:
        src: "{{ _rundeck_cli_user.home }}/.rd/token"
      register: _token_read

    - name: Stash token in variable
      set_fact:
        _cli_token: "{{ (_token_read.content | b64decode).splitlines()[0] }}"

- name: Install CLI token ACL
  copy:
    dest: "{{ rundeck_config_dir }}/cliuser.aclpolicy"
    content: "{{ rundeck_cli_auto_token_acl }}"
    owner: "{{ rundeck_cli_user }}"
    group: "{{ rundeck_group }}"
    mode: u=r,g=r,o=
  when:
    - rundeck_cli_auto_token
    - rundeck_cli_auto_token_acl|length

- name: Remove CLI token ACL
  file:
    path: "{{ rundeck_config_dir }}/cliuser.aclpolicy"
    state: absent
  when: not rundeck_cli_auto_token or not rundeck_cli_auto_token_acl|length

- name: Configure CLI
  template:
    src: cli.sh.j2
    dest: "{{ _rundeck_cli_user.home }}/.rd/rd.conf"
    owner: "{{ rundeck_cli_user }}"
    group: "{{ rundeck_cli_user }}"
    mode: u=rw,g=,o=
